{"version":3,"sources":["NavBar.js","pages/home.js","api.js","pages/LogIn.js","pages/SignUp.js","pages/Profile.js","config.js","video.js","pages/Random.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","user","token","logout","Navbar","collapseOnSelect","expand","bg","variant","Container","Brand","href","Toggle","Collapse","id","Nav","className","Link","as","NavLink","to","onClick","Home","BASE_URL","console","log","StreamApi","endpoint","data","method","debug","url","headers","Authorization","params","axios","error","response","message","Array","isArray","this","request","res","localStorage","setItem","username","getItem","LogIn","login","history","useHistory","useState","password","formData","setFormData","handleChange","e","target","name","value","a","preventDefault","api","result","push","onSubmit","htmlFor","type","onChange","SignUp","INITIAL_STATE","email","register","Profile","appKey","accessToken","Video","channel","Row","Col","xs","md","title","src","height","width","allowFullScreen","Random","apiToken","stream","setStream","games","setGames","setIsLoading","selectGame","setSelectGame","gameStreams","setGameStreams","getGames","get","game","getStreams","streams","useEffect","map","g","Button","random","Math","floor","length","user_name","App","setUser","setToken","logInUser","jwt","decode","clear","savedToken","getToken","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f6491a48.chunk.js","sourcesContent":["import {Navbar, Container, Nav, NavDropdown} from 'react-bootstrap'\nimport {NavLink} from 'react-router-dom'\n\nconst NavBar = ({user, token, logout}) =>{\nreturn (\n    <>\n  <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\n  <Container>\n  <Navbar.Brand href=\"/\">Random Stream</Navbar.Brand>\n  <Navbar.Toggle aria-controls=\"responsive-navbar-nav\"/>\n  <Navbar.Collapse id=\"responsive-navbar-nav\">\n  \n      {!token ?\n      <>\n      <Nav className=\"ms-auto\">\n      <Nav.Link as={NavLink} to=\"/signup\" className=\"navlinks\">Sign up</Nav.Link>\n      <Nav.Link as={NavLink} to=\"/login\" className=\"navlinks\">Log In</Nav.Link>\n      </Nav>\n      \n      </>\n      :\n      <>\n      <Nav className=\"ms-auto\">\n      <Nav.Link as={NavLink} to=\"/random\" className=\"navlinks\">Streams</Nav.Link>\n      <Nav.Link as={NavLink} to={`/${user}`} className=\"navlinks\">{user}</Nav.Link>\n      <Nav.Link as={NavLink} to='/logout'  onClick={logout} className=\"navlinks\">Logout</Nav.Link>\n      \n    </Nav>\n    </>\n    }\n      </Navbar.Collapse>\n    </Container>\n  </Navbar>\n\n  </>\n  \n     \n\n)\n}\n\nexport default NavBar;","const Home = () =>{\n    return (\n        <>\n        <h1>Welcome</h1>\n        <p>This is a site to help smaller streamers grow and potentially get more viewers! </p>\n        </>\n    )\n}\n\nexport default Home;","import axios from \"axios\";\n\nconst BASE_URL = 'https://randomtwitchstream.herokuapp.com';\nconsole.log(BASE_URL)\n\n/** API Class.\n *\n * Static class tying together methods used to get/send to to the API.\n * There shouldn't be any frontend-specific stuff here, and there shouldn't\n * be any API-aware stuff elsewhere in the frontend.\n *\n */\n\nclass StreamApi {\n  // the token for interactive with the API will be stored here.\n  static token = localStorage.getItem('token');\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    //there are multiple ways to pass an authorization token, this is how you pass it in the header.\n    //this has been provided to show you another way to pass the token. you are only expected to read this code for this project.\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${StreamApi.token}` };\n    const params = (method === \"get\")\n        ? data\n        : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  // Individual API routes\n\n  \n\n  static async register(data){\n    let res = await this.request('user/signup', data, 'post')\n    StreamApi.token = res.token\n    localStorage.setItem('token',StreamApi.token)\n    return res.token\n  }\n\n  static async login(data){\n    let res = await this.request('user/login', data, 'post')\n    StreamApi.token = res.token\n    localStorage.setItem('token',StreamApi.token)\n    return res.token\n  }\n\n  // static async update(username, data){\n  //   let res = await this.request(`users/${username}`, data, 'patch')\n  //   return res.user\n  //   }\n//get specific user\n  static async getUser(username){\n    let res = await this.request(`user/${username}`)\n    return res.user\n  }\n\n\n}\n\n// for now, put token (\"testuser\" / \"password\" on class)\n// StreamApi.token = \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZ\" +\n//     \"SI6InRlc3R1c2VyIiwiaXNBZG1pbiI6ZmFsc2UsImlhdCI6MTU5ODE1OTI1OX0.\" +\n//     \"FtrMwBQwe6Ue-glIFgz_Nf8XxRT2YecFCiSpYL0fCXc\";\n\nexport default StreamApi;\n","import '../Login.css'\nimport React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport api from '../api'\n\nconst LogIn = ({login}) =>{\n    const INITIAL_STATE = {\n        username:'',\n       password:''\n    }\n    const history = useHistory();\n    const [formData, setFormData] = useState(INITIAL_STATE)\n   \n   \nconsole.log(formData)\n    const handleChange = (e) =>{\n        const {name, value} = e.target\n        setFormData((data) => ({\n            ...data,\n            [name]: value,\n        }))\n    }\n\n    \n\n      async function handleSubmit(e) {\n        e.preventDefault();\n        const result = await api.login(formData)\n        console.log(result)\n        login(result)\n        history.push('/')\n      }\n    return(\n        <>\n        <h1>Log In</h1>\n        <div className=\"logInDiv\">\n        <form className=\"logInForm\" onSubmit={handleSubmit}>\n            <label htmlFor=\"username\">Username</label>\n            <input type=\"text\" id=\"username\" name=\"username\" onChange={handleChange}></input>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" name=\"password\" onChange={handleChange}></input>\n            \n            <button className=\"loginsubmit\">Submit</button>\n        </form>\n        </div>\n        </>\n    )\n}\n\nexport default LogIn;\n\n","import '../Signup.css'\nimport React, {useState} from 'react'\nimport {useHistory} from 'react-router-dom'\nimport api from '../api'\n\nconst SignUp = ({login}) =>{\n    const INITIAL_STATE = {\n        username:'',\n        name:\"\",\n        email:\"\",\n       password:''\n    }\n    const history = useHistory();\n    const [formData, setFormData] = useState(INITIAL_STATE)\n   \n   \n\n    const handleChange = (e) =>{\n        const {name, value} = e.target\n        setFormData((data) => ({\n            ...data,\n            [name]: value,\n        }))\n    }\n\n      function handleSubmit(e) {\n        e.preventDefault();\n        // addUser(formData)\n        register(formData)\n        setFormData(INITIAL_STATE)\n        history.push('/')\n      }\n\n      const register = async (data) =>{\n          const res = await api.register(data)\n          console.log(res)\n          login(res)\n      }\n    return(\n        <>\n        <h1>Sign Up</h1>\n        <div className=\"signUpDiv\">\n        <form className=\"signUpForm\" onSubmit={handleSubmit}>\n            <label htmlFor=\"username\">Username</label>\n            <input type=\"text\" id=\"username\" name=\"username\" onChange={handleChange}></input>\n            <label htmlFor=\"name\">Name</label>\n            <input type=\"text\" id=\"name\" name=\"name\" onChange={handleChange}></input>\n            <label htmlFor=\"email\">Email</label>\n            <input type=\"email\" id=\"email\" name=\"email\" onChange={handleChange}></input>\n            <label htmlFor=\"password\">Password</label>\n            <input type=\"password\" id=\"password\" name=\"password\" onChange={handleChange}></input>\n            \n            <button className=\"signupsubmit\">Submit</button>\n        </form>\n        </div>\n        </>\n    )\n}\n\nexport default SignUp;\n\n","import React from 'react'\n\nconst Profile = () =>{\n    return (\n        <>\n            <h1>Profile</h1>\n        </>\n    )\n}\n\nexport default Profile","const appKey = \"g3cpadpxnnd9gxed8srkr30ulotv6b\"\nconst secret = \"mvpagfy8nztsz26jwxqnrsf4zihmnp\"\nconst accessToken = \"8r58425i828m45gn2eikqpsqe4of5c\"\n\nexport {appKey, secret, accessToken};","import React from 'react'\nimport { useState } from 'react'\nimport axios from 'axios'\nimport { useEffect } from 'react'\nimport ReactTwitchEmbedVideo from \"react-twitch-embed-video\"\nimport {Container, Row, Col} from 'react-bootstrap'\nimport \"./video.css\"\nexport const Video = ({channel, id}) => {\n    \n   \n\n    return (\n        <Container>\n            <Row>\n                \n        <div className=\"stream \">\n            <Col xs md={6}>\n        <iframe\n        title=\"twitch-stream\"\n    src={`https://player.twitch.tv/?channel=${channel}&parent=randomtwitchstream.herokuapp.com&muted=false`}\n    height=\"500\"\n    width=\"600\"\n    allowFullScreen={true}>\n</iframe>\n</Col>\n<Col md=\"auto\">\n<iframe src={`https://www.twitch.tv/embed/${channel}/chat?parent=randomtwitchstream.herokuapp.com`}\n        height=\"500\"\n        width=\"400\">\n</iframe>\n</Col>\n</div>\n</Row>\n</Container>\n    )\n}\n\nexport default Video;\n\n","import React,{useState,useEffect} from 'react'\nimport axios from 'axios'\nimport {Container, Button} from 'react-bootstrap'\n// import '../random.css'\nimport {appKey, secret, accessToken} from '../config'\nimport Video from '../video'\nconst Random = ({apiToken}) =>{\nconst [stream, setStream] = useState()\nconst [games, setGames] = useState()\nconst [isLoading, setIsLoading] = useState(null)\nconst [selectGame, setSelectGame] = useState({'name':null})\nconst [gameStreams,setGameStreams] = useState();\n\n\n\nconst handleSelect = (e) =>{\n        const {name, value} = e.target\n        setSelectGame(() => ({\n            [name]: value\n        }))\n        console.log(selectGame)\n}\n\nconst randomStream = (e) =>{\n    e.preventDefault()\n    setIsLoading(true)\n    let random = gameStreams[Math.floor(Math.random()*gameStreams.length) - 1 ]\n    setIsLoading(false)\n    setStream(random)\n\n    \n    console.log(stream)\n}\n\nconst getGames = async () => {\n    const game = await axios.get(\"https://api.twitch.tv/helix/games/top?first=100\", {\n        headers:{\n            'Client-Id':appKey,\n            'Authorization': `Bearer ${accessToken}`\n        }\n    })\n    setGames(game.data)\n} \n\nconst getStreams = async (e) =>{\n    e.preventDefault()\nconst streams = await axios.get(`https://api.twitch.tv/helix/streams?game_id=${selectGame.game}&first=100`,{headers:{\n    'Client-Id':appKey,\n    'Authorization': `Bearer ${accessToken}`\n}\n})\n\nsetGameStreams(streams.data.data)\nconsole.log(gameStreams)\n}\nuseEffect(()=>{\n    getGames()\n},[])\nreturn (\n    <>\n    <h1>Random Stream</h1>\n    {!games ?\n    <h1>Loading...</h1>\n    :\n    <Container className=\"text-center\">\n    <form onSubmit={getStreams}>\n    <select name=\"game\" onChange={handleSelect}>\n    {games.data.map(g=>(\n        <option name=\"name\" value={`${g.id}`}>{g.name}</option>\n    ))}\n    </select>\n    <Button type=\"submit\">Get All Streams</Button>\n    </form>\n    {!gameStreams?\n    null\n    :\n    <form onSubmit={randomStream}>\n        <Button type=\"submit\" className=\"btn btn-success\">Get Random Streams</Button>\n    </form>\n}\n    </Container>\n}\n{!stream?\n<h1>Select a game you would like to watch!</h1>\n:\n<>\n<h1>{stream.user_name}</h1>\n    <Video channel={stream.user_name}/>\n</>\n}\n    </>\n)\n}\n\nexport default Random;","import './App.css';\nimport {BrowserRouter, Route, Switch} from 'react-router-dom'\nimport NavBar from './NavBar'\nimport Home from './pages/home'\nimport LogIn from './pages/LogIn'\nimport SignUp from './pages/SignUp'\nimport Profile from './pages/Profile'\nimport Random from './pages/Random'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useState } from 'react';\nimport axios from 'axios'\nimport { useEffect } from 'react';\nimport {appKey, secret} from './config'\nimport jwt from 'jsonwebtoken'\nfunction App() {\n  const [user, setUser] = useState()\n  const [token, setToken] = useState()\n  const [apiToken, setApiToken] = useState()\n\n  const getApiToken = async () =>{\n    console.log(appKey, secret)\n    const newToken = await axios.post(`https://id.twitch.tv/oauth2/token?client_id=${appKey}&client_secret=${secret}&grant_type=client_credentials`)\n    console.log(newToken.data)\n    setApiToken(newToken.data.access_token)\n}\n\n  const getToken = () =>{\n    const savedToken = localStorage.getItem('token')\n    if(savedToken){\n    logInUser(savedToken)\n    }\n  }\n  const logInUser = (data) =>{\n    setToken(data)\n    const username = jwt.decode(data).username\n    console.log(username)\n    setUser(username)\n  }\n  const logout = () =>{\n    setUser([])\n    setToken('')\n    localStorage.clear()\n  }\n\n  useEffect(()=>{\n    getToken()\n  },[])\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n      \n        <NavBar user={user} token={token} logout={logout}/>\n      \n      <Switch>\n      \n    \n    <Route path=\"/login\">\n      <LogIn login={logInUser}/>\n    </Route> \n    <Route path=\"/signup\">\n       <SignUp login={logInUser}/>\n    </Route>\n    <Route path='/logout' logout={logout} />\n    <Route path=\"/random\">\n      <Random apiToken={apiToken}/>\n    </Route>\n    <Route path=\"/:username\">\n      <Profile user={user}/>\n    </Route>\n   \n    \n    <Route path=\"/\">\n        <Home/>\n      </Route>\n    </Switch>\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('twitch-embed')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}